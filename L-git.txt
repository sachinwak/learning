<<<<<<< HEAD
git --version   // check version


git config --global user.name "sachinwak"
git config --global user.email "sachinw68@gmail.com"

git config --list


git help config              // to get help
git config --help            // to get help


ls   // list directory
ls -la  // list all files in directory


git init    // to start git project 

rm -rf .git   // to remove git


git status  // get status

touch .gitignore   // ignore files


// where are we now
// working dir , staging, repository


git add -A    // add files to staging area
git add filename    // add a file to staging area


git reset filename   // remove from staging
git reset            // remove from staging


git commit -m "initial comments"  // add files to directory
git log   // check log 

git clone <url> // get git files
git clone https://github.com/sachinwak/learning.git  


//http://product.hubspot.com/blog/git-and-github-tutorial-for-beginners

sachin
=======
git --version   // check version


git config --global user.name "sachinwak"
git config --global user.email "sachinw68@gmail.com"

git config --list


git help config              // to get help
git config --help            // to get help


ls   // list directory
ls -la  // list all files in directory


git init    // to start git project 

rm -rf .git   // to remove git


git status  // get status

touch .gitignore   // ignore files


// where are we now
// working dir , staging, repository


git add -A    // add files to staging area
git add filename    // add a file to staging area


git reset filename   // remove from staging
git reset            // remove from staging


git commit -m "initial comments"  // add files to directory
git log   // check log 

git clone <url> .  // get git files to current directory
git clone https://github.com/sachinwak/learning.git .


//http://product.hubspot.com/blog/git-and-github-tutorial-for-beginners

git remote -v   // get url of git
git branch -a   // get list of branches


// push changes

git diff
git status
git add -A
git commit -m "my comments"

// then push
git pull origin master   // get all latest files
git push origin master   // push files to repository




// create branch for desired feature
git branch calc-divide   // create branch
git checkout calc-divide   // select branch




// After commit  push branch to remote
git push  -u origin calc-divide  // push to branch
git branch -a  //// get list of branches


// Merge branches
git checkout master 
git pull origin master
git branch --merged  // fire command to merged
git merge calc-divide  // merged with branch
git push origin master  // push to master


// deleting a branch
git branch --merged  // fire command to merged
git branch -d calc-divide  // delete from staging
git branch -a // get list of branch
git push origin --delete calc-divide






